name: Complete Deployment Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ infra/main, infra/develop ]
    paths:
      - "infrastructure/**"
      - "microservices/**"
  pull_request:
    branches: [ infra/main, infra/develop ]
    paths:
      - "infrastructure/**"
      - "microservices/**"

jobs:


  # build-and-push:
  #   runs-on: ubuntu-latest
  #   needs: terraform-dev
  #   if: contains(github.event.head_commit.modified, 'microservices/') || github.event_name == 'workflow_dispatch'
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Build and Push Docker Images
  #       run: |
  #         az login --service-principal \
  #           --username ${{ secrets.AZURE_CLIENT_ID }} \
  #           --password ${{ secrets.AZURE_CLIENT_SECRET }} \
  #           --tenant ${{ secrets.AZURE_TENANT_ID }}
  #         az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #         ACR_NAME="msworkshop1devacr"
  #         ACR_LOGIN_SERVER=$ACR_NAME.azurecr.io
  #         az acr login --name $ACR_NAME
  #         declare -a images=("log-message-processor" "auth-api" "frontend" "todos-api" "users-api")
  #         for img in "${images[@]}"; do
  #           docker build -t $img:latest ./microservices/$img
  #           docker tag $img:latest $ACR_LOGIN_SERVER/$img:latest
  #           docker push $ACR_LOGIN_SERVER/$img:latest
  #         done

  deploy-kubernetes:
    runs-on: ubuntu-latest
    # needs: [terraform-dev , build-and-push]
    steps:
      - uses: actions/checkout@v4

      - name: Get AKS Credentials
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          az aks get-credentials \
          --resource-group msworkshop1-dev-rg \
          --name msworkshop1-dev-aks

      - name: Deploy to Kubernetes
        run: |
          ACR_NAME="msworkshop1devacr"
          ACR_LOGIN_SERVER=$ACR_NAME.azurecr.io
          find ./k8s -name "*.yaml" -o -name "*.yml" | while read manifest; do
            envsubst < $manifest | kubectl apply -f -
          done

      - name: Check Deployment Status
        run: |
          kubectl get pods
          kubectl get services
          kubectl get deployments
